[{"id":"5","title":"OngaqJS触ってみた","description":"# はじめに\rこんにちは\r[ポートフォリオ](https://takurinton.github.io/portfolio/)（おふざけ入ってるあれです）にリンク貼ってあるOngaqJSについてのソースコードをまとめてみたので記事にしました。\r\r\r#OngaqJSとはなんぞや？\rOngaqJSとは、JavaScriptで音楽が作成できるというAPIです。\rKeyの取得は[こちら](https://www.ongaqjs.com/)から\r有料枠と無料枠があり、使える楽器の種類などが異なる模様（有料会員になろうかな）\r\rぽちぽちしていけば簡単に登録でき、誰でもKeyを取得できます！\r\r\r\r# やっ...","created_at":"2020-04-24"},{"id":"6","title":"GWの過ごし方","description":"# どうも\r\r皆さん、コロナですがどうお過ごしでしょうか？僕はとっても暇です（ほんとは暇ではないのですがそこは割愛）\r\rまあ、今日はほんとに暑くて、気温が23度もあったらしくて、そんなことどうでもいいので本題に移りましょう。\r\r\r# 散歩をしてきた\r私は散歩がとっても好きで、音楽を爆音で流しながら散歩をします。\rそこで、ふと思いついた、大学1年生の時Javaで素数の列挙書いたなあ、でも汚いコードだったなあ\rということで、散歩中に素数の列挙のプログラムを少し考えながら歩いて、帰宅して20分くらいで実装して、今記事を書いてるって感じです。\r\r\r\r# 実装していく\r\rまあ、実装したと言っても、大した...","created_at":"2020-05-01"},{"id":"8","title":"Djangoのすゝめ","description":"# Djangoって知ってますか？\rDjangoって知ってます？DjangoはPythonで書かれているWeb開発フレームワークです。フレームワークとはなんぞやって人は[こちら](https://www.otsuka-shokai.co.jp/words/framework.html)から。\r\rDjangoはMTVモデルというもので構成されています。MTVモデルとは、Djangoに標準装備されているモデリングのことで、この概念はやっていくうちに理解していけばいいと思います。\rちなみにMTVはなんの略かというと\r\r- M (Model)\r- T (Template)\r- V (View)\r\rこれ...","created_at":"2020-05-16"},{"id":"9","title":"ブログを引っ越した話","description":"# はじめに\rこんにちは。疲れた。\rてことで今回は僕がはじめてAWSを使ったときに詰まったところについてまとめたいと思います！！！\rまた、この記事はQiitaにも全く同じことが書いてありますので、見やすい方がいいなと思ったら素直にQiitaに言ってください。\rURLは[こちら](https://qiita.com/takurinton/items/6f1e98907ba4043be745)です\r\r\r\r# 僕のレベル\rAWSって何？？？？\rまず最初に言っておきますが、私はこのレベルの人間です。AWSって言葉は知ってるけど中身は知らない、また、インフラの知識も皆無の状態から始めました。\rいろいろグ...","created_at":"2020-06-10"},{"id":"12","title":"サポーターズの1on1面談に参加した話","description":"# こんにちは\rこんばんは、先日サポーターズの1on1面談イベントに参加したので記事にしたいと思います。\r簡単にまとめると、とっても楽しかったし充実した時間になったけど、その分周りのエンジニア志望の学生との差を痛感してとても刺激がもらえたイベントでした！！！！\r\r\r1on1面談イベントってなんだよって思った方は[こちらのリンク](https://talent.supporterz.jp/events/a848a771-6236-4792-b2f9-91e1301b2ba8/)を参照してみてください。\r\r\r#事前に準備したこと\rこのイベントは、各ターンの最初に学生から企業に5分ほど自己紹介をする...","created_at":"2020-06-11"},{"id":"14","title":"冷房壊れて2週間","description":"# こんにちは\rハローエブリワン！\r先日この記事書いてたら割と書き進めたところで下書き保存せずにブラウザ閉じて書いたもの全部消えちゃったので今日になって泣く泣く書き直してます。（他にも泣きたいことはたくさんあるのですが今回は割愛）\r  \r冷房が壊れて2週間経ちますが、だいぶきついのでそろそろ大家さんに相談しようと思ってます。  \r\r\rさて、今日の記事はVOYAGE GROUPのサマーインターンのTreasureに参加してるので初日を終えての学んだことと感想を簡単にですがまとめたいと思います。\rではいく！\r\r\r# 初日は講義\r初日はJavaSctiptの講義がありました。  \r午前中は歴史や発展...","created_at":"2020-08-05"},{"id":"16","title":"冷房壊れて3週間","description":"# こんにちは\r前回に引き続き、Treasureについての記事を書きます。まだエアコンが壊れているので家の中は地獄です。(๑˃̵ᴗ˂̵)\r\r2日目の今日はGolangについての講義がありました。\r自分自身Golang知らんって感じの人間なので、ﾋｲﾋｲｾﾞｴｾﾞｴしてました。また、Golang以外にもテスト駆動開発についての話や認証についての話についての講義もあり死ぬかと思いました。（生きてて良かった）\r\rちなみにさっき終わったばかりで何も理解してません。人に説明できるなって思ったところだけをこの記事には書いていきます。それ以外の部分はこれから復習していきます。（多分やった内容の10分の1くら...","created_at":"2020-08-08"},{"id":"17","title":"Treasureに参加した話","description":"# はじめに\rこんにちは。僕です。\r以前の記事にも書きましたが、VOYAGE GROUPのTreasureというインターンに参加したのでまとめたいと思います。\r結論から言うと最高のインターンでした！！（迷惑かけてばっかりだったけど）\r\r来年以降インターンシップに行きたいと思ってる人はぜひTreasureにも申し込んでみてください！\r\r\r# そもそもTreasureってなんだ\r\rTreasureとはVOYAGE GROUPの夏インターンです！\r詳しくは[こちら](https://voyagegroup.snar.jp/jobboard/detail.aspx?id=upwT50B8xR8)をご覧...","created_at":"2020-09-02"},{"id":"18","title":"Amebaでコード書いてた","description":"# こんにちは\rどうも、僕です。\r今回はサイバーエージェントの就業型インターンに参加して、Ameba事業本部という部署で少しだけコード書かせてもらったのでそのことについて記事にしたいと思います。\r\r# 参加した経緯\rこれは遡ること2月、、、\r\r僕が某企業のアドテクのインターンに参加して、楽しかったことを大学の先輩のYさんに報告しました。  \r\r僕「この前アドテクのインターンに参加して、DSP周りのコードを簡単にですけど書いたんですよ〜」  \rYさん「へー、楽しそうじゃん、いいね」  \r僕「ちょっとだけアドテクに興味持ちました！」  \rYさん「サイバーのインターン行けばもっと長い期間、大きな規模...","created_at":"2020-09-13"},{"id":"19","title":"楽天のインターンに参加した話","description":"# こんにちは\rどうも、僕です。今回は夏の締めくくりに参加した楽天のインターンについて書きたいと思います。  \r楽天のインターンはここまでのインターンの中で一番辛かったような気がします（言語的な問題）  \r海外で仕事できる気がしませんでした。そんな感じでまとめていきます。\r\r# 選考\rインターンには選考がつきものです。  \r選考内容はコーディングテストと面接で、両方とも1日で終わらせます。参加者全員。\rコーディングテストはcodilityというサービスを使います。ググるのは禁止だそうで、バレたらどうなるかは知りません。面接はエンジニアの方2人と行い、こちらは普通の面接といった感じでした。  \r...","created_at":"2020-09-25"},{"id":"21","title":"Skywayでビデオ通話","description":"# はじめに\rこんにちは、ブログに MaterialUIを導入してルンルンの[僕](https://takurinton.com)です。  \r今回はSkyWayで1対1の音声通話、またそれを文字起こしをしてGASに投げる処理までを書いたのでまとめたいと思います。  \rGitHub Pages でデプロイしたサイトは[こちら](https://takurinton.github.io/textapp/#/)になります。  \rレポジトリは[こちら](https://github.com/takurinton/textapp)になります。\r\r# SkyWayって何？\rSkyWayとは、Webでリアル...","created_at":"2020-10-09"},{"id":"22","title":"音声検索β","description":"# こんにちは\rこんにちは。僕です。  \r今日はブログに音声検索の機能を実装したのでつまづいたところ、うまく行ったところ、逆にうまくいかなくて現状では実装できていないところなどを書いていきたいと思います。  \r  \r全体のコードは[こちら](https://github.com/takurinton/takurinton.com)にあります。\r\r# 実装する\r実装ですが、今回は文字起こしまでをフロントエンド、形態素解析と処理はバックエンドで実装しました。  \rフロントエンドでも文字起こしはできたのですが、形態素解析から処理までの流れを一連の動き（型や言語なども含めて）にしたかったためバックエン...","created_at":"2020-10-10"},{"id":"23","title":"Django + RDS","description":"# こんにちは\rどうも、僕です。  \r今回はAWSのEC2にデプロイしたDjangoのプロジェクトをRDSに接続する方法について書きたいと思います。  \rDjangoを理解してればとても簡単。困ることなんてありません。ではいきます。\r\r# バックアップを取る\rDjangoではデフォルトのDBとしてプロジェクトを作成したときにsqlite3のテーブルがついてきます。  \rしかし、RDSに乗り換えるときにはsqlite3のデータは当然消えてしまいます。そのため、事前にバックアップを取っておこうと思います。\r\rAWSのコンソールに入り、manage.pyのあるディレクトリで以下のコマンドを実行します...","created_at":"2020-10-15"},{"id":"26","title":"easyjsonを使ってみた","description":"# こんにちは\rどうも、[僕](https://www.takurinton.com)です。  \rこの記事は随分前のインターン期間中に自分のために書いた記事を転載してます。  \r\rGoでJSON使う時ってだいぶめんどくさいんですよね。まあ型による安心感がバケモンなのでやった方がいいんですけど。\rGoでJSONを捌く時はstructを使用します。  \rクラスとかはないのでこれでいきます。　\r\r## Unmarshal\r早速やってみます。\r例えばこんな感じのjsonがくるとします。\r\r\r\rそれをGoで扱える形に変換したい時はこんな感じで書いてあげます。\r\r\r\r\r\r\r\rGoには[Unmarshal]...","created_at":"2020-10-21"},{"id":"29","title":"4日間でポートフォリオを作り替えた","description":"# こんにちは\rどうもこんにちは。僕です。  \r最近あったことといえば、Vのインターン落ちて落ち込んでるところに人事の方からのなぐさめのDMがきてさらに泣きそうになったところでRからの内定もらってなんだかメンタルが忙しいことです。  \r\r今回は僕がポートフォリオを作り替えた話（需要あるのか？）について話していこうと思います。  \r\r# なんで作り替えたの？\rまずここから  \r作り替えた理由としては3つあります。\r\r- Next.jsを試したかった\r  - 月曜日にあった勉強会でNextの話出てきて感化されちゃった（元々やりたいとは思ってた）\r  - SSR真面目にやりたかった\r  - OGPの...","created_at":"2020-11-14"},{"id":"30","title":"Goのdeferに注意する","description":"# はじめに\r今日開発してて遭遇したエラーについて話します。短めです。よろしくお願いします。\r\r\r# 状況\rGoでAPIサーバを開発してる時に、エラーハンドリングについての実装をしていた。  \r現状の問題としては、DBと接続する時にアプリケーションサーバ（NginxやらGolangやら）が生きてる状態でDBサーバ（今で言うRDS）が死んでる時にDBのIPアドレスとポートがクライアント側に渡されてしまうという問題が起きていた。  \rそこで、DBサーバが死んでいる時には無条件でinternal server errorを返すという実装をしてた。\r\r# 問題点　\r\rコードで言うと、以下の点で問題が発...","created_at":"2020-11-15"},{"id":"31","title":"DjangoでUser認証機能を作る","description":"# こんにちは\r[これです](https://github.com/takurinton/django_auth)  \rどうも、僕です。  \rこの記事は[KITアドベントカレンダー](https://qiita.com/advent-calendar/2020/kitdev)の4日目の記事になります。  \r今回はユーザー認証の機能を実装してみようと思います。  \r\r# やり方\rDjangoではデフォルトでユーザーモデルが定義されています。今回はそれを書き換えることでユーザー認証の仕組みを作成して行こうと思います。  \r最近だと外部の認証に任せるパターンも増えていますが、こっちの方が楽だと感じる...","created_at":"2020-12-04"},{"id":"32","title":"DRFのすゝめ","description":"# こんにちは\rこんにちは、こんばんは、あるいはおやすみなさい。僕です。  \r今日はDRFを布教します。みんな使って欲しいなあ。\r\r# DRFとは？\rこれです。\r[https://www.django-rest-framework.org/](https://www.django-rest-framework.org/)\r  \rみんな大好きDjangoでREST APIを実装することができるようにしたフレームワークです。  \r通常のDjangoと比較すると以下のような感じになります。\r- models.py、views.pyは同じ\r- urls.pyの考え方も同じ、Djangoだとルーティング...","created_at":"2020-11-19"},{"id":"33","title":"pyparsing触ってみた","description":"# こんにちは\rこんにちは、僕です。  \r最近、pyparsingというPythonのライブラリを使用していて、面白いなあと思ったので記事にしてみました。  \r元々自分は言語解析などに興味があって（NLPとか）、今回は形式言語解析になりますがまとめたいと思います。\r\r# pyparsingとは？\r[これ](https://github.com/pyparsing/pyparsing)です。  \r[ドキュメント](https://pyparsing-docs.readthedocs.io/en/latest/HowToUsePyparsing.html)  \r\r\r\rだそうです。英語わかんねえや。...","created_at":"2020-11-24"},{"id":"34","title":"DRFのViewについてまとめる","description":"# こんにちは \rどうも、こんにちは、僕です。  \r今日はDRFのなんちゃらAPIViewについてまとめたいと思います。  \r自分の推しはAPIViewです。対戦お願いします！  \r\r# DRFとは？\rそんなもんは自分で調べてください（辛辣）  \r  \r参考までにこれは[前回の記事](https://www.takurinton.com/post/32)でさらっと書いてしまったAPIView周りの深堀りみたいなイメージで描いていきます。  \r\r# 今回使うモデル\r今回使うモデルはとてもシンプルで、以下のようなものを想定しています。\r\r- User\r  - name (strint, prima...","created_at":"2020-11-27"},{"id":"35","title":"asgiをぽよってみた","description":"# こんにちは\rどうも、僕です。今回はDjangoでasgiを使用してみたということでチュートリアルを自分なりにまとめたいと思います。最近のブログ暇つぶしみたいな感じだったので今回は久しぶりに新しい技術に触れたアウトプット感があって良きです。浅い\r\r\r# asgiって何？\rまず最初にasgiについて説明したいと思います。そもそもPythonで鯖を立てるためにはwsgiとasgiの2種類があります。  \r\r- wsgi\r  - これまで一般的に使われてきたPythonの鯖\r  - 強い\r  - gunicornなどと一緒に使うことができる\r- asgi\r  - wsgiに加えて非同期通信を実現し...","created_at":"2020-11-27"},{"id":"36","title":"asgiをぽよってみたつづき","description":"# どうも\rこんにちは、僕です。  \r今回は前回の記事の続きを書いていきたいと思います。まだまだリファクタリングしないといけないのですが、現状動くものをのせる的な感じで。\r\r# 前回なにしたか\r前回はぽよりました。（適当）  \rまあ、簡単にソケットでチャットを作りましょうみたいなことをしました。  \r\r# 今回はなにするか\rそこに今回はユーザーを定義してさらにチャットを保存していくみたいな実装をしました。  \r簡単な実装しかしていないのでなんとも言えないですが、楽しく実装することができたかなと思います。  \rそれでは書いていきます。 \r\r# ユーザーモデルを定義する\r今回はカスタムユーザーモデ...","created_at":"2020-11-30"},{"id":"37","title":"puppeteer楽しい","description":"# はじめに\rこんにちは、僕です。  \rこの記事は[KITアドベントカレンダー11日目の記事](https://qiita.com/advent-calendar/2020/kitdev)になります。  \r今日はpuppeteerで遊んだってだけの短い記事を書いていきます。  \rこれ面白いのでおすすめです。（今テスト勉強しながらコード読んでる）   \r今回作成したやつのコードは[こちら](https://github.com/takurinton/puppeteer_test) \r\r# puppeteerとは何か\rpuppeteerとは操り人形という意味を持っています（知らんかった）  \rちな...","created_at":"2020-12-05"},{"id":"38","title":"Goの名前付き戻り値","description":"# こんにちは\rどうも僕です。  \rこの記事は[KITアドベントカレンダー11日目](https://qiita.com/advent-calendar/2020/kitdev)の記事になります。  \r今回はGolangの名前付き戻り値について簡単にまとめてみました。  \r\r# そもそも名前付き戻り値って何？\rまずこれですよね、僕も最初はわからんってなってましたし、今もよくわかってないです。  \r簡単にいうと、戻り値に名前をつけておくことができます。比較は以下のコードで。  \r\r\r\rこんな感じでreturnが呼ばれたときには予め決めた名前を返すことができます。  \rこのコードでは恩恵が感じられ...","created_at":"2020-12-11"},{"id":"39","title":"アドテクって何？","description":"# こんにちは\rどうも、僕です。  \rこの記事は[KITアドベントカレンダー19日目](https://qiita.com/advent-calendar/2020/kitdev)の記事になります。  \r\r# アドテクって？\rそもそもアドテクってなんなのでしょうか。  \rアドテクは、インターネット上に広告を出したい「広告主」と、広告を出すことによって収益を得たい「メディア」が存在しており、アドテクによって「広告主」と「メディア」の両方の収益を最大化するような仕組みを作っています。また、ユーザーに対して価値の高い広告を表示することでUXの向上も見込めます。\r\r![](../contents/im...","created_at":"2020-12-18"},{"id":"40","title":"フロントエンドの今","description":"# こんにちは\rどうも、僕です。  \r今日はフロントエンドについて書いて行こうと思います。（抽象的〜〜〜）  \r  \r僕はフロントエンドの人間ではないのであまり詳しくはないのですが、そんな僕でも知っていることや最低限意識していることなどを簡単にですがまとめていきたいと思います。\r\r\r# 最近のフロントエンド\r最近はフロントエンドの進化が早く、バックエンド側まで侵食しかけている印象を受けます。SPAとはみたいなことを思うようなフレームワーク（Blitzとか（僕は好かない））なども見かけますが、そこは今回は考えないこととして、あくまでSPAでのコーディングを前提とした話をしていますのでよろしくお願...","created_at":"2020-12-15"},{"id":"42","title":"2020年振り返り","description":"# こんにちは\rどうも，僕です．  \rこれを書いているときはクリスマスで，TLのみんなはコード書いてるんだろうなって思いながら書いてます．  \r今年一年，某病気にほぼ潰されてしまいましたが，個人的には充実した1年間になったと感じています．  \rインターン，就職活動，技術的な成長，その他もろもろ人生の分岐点となるようなことが多かった気がします．それを割と雑に振り返っていきたいと思います．  \r\r# 2020年という年\r今年は大変な年でしたね．様々なことがおきました．  \r**中でも最近流行りのCOVID-19，タピオカより流行ってますね．**    \r最初はお年寄りが感染していましたが最近では若...","created_at":"2020-12-25"},{"id":"49","title":"JWTについて学ぶ","description":"# はじめに\rどうも，僕です．今日はGolangでJWTを実装したけどちょっとつまづいたことが多かったので記事にしたいと思います．  \rこれ実装したのだいぶ前なので思い出しながら頑張っていこうと思います．  \r\r\r# JWTについて\rそもそもJWTとはなんなのかについて簡単におさらいをしておきたいと思います．  \rJWTとは，JSON Web Tokenの略で属性情報（Claim）をJSONの中に丸め込むことで個人を識別することができるようにした仕様のことです．  \rこいつを使うと署名や暗号化ができURL-safeになるということなのです．  \rJWTと書いてジョットと読みます．ショットじゃな...","created_at":"2021-01-11"},{"id":"50","title":"Golangとの半年","description":"# こんにちは\rどうも，僕です．  \r2021年1月の時点でGolangと出会ってから半年が経ちました．この半年，様々なことを感じ，Golangを通して様々なことを学びました．その過程の振り返りと今後どうしていきたいかを自分自身の振り返りとして残していきたいと思います．  \r  \r  \rまた，この記事を通じてGolangを新しく学ぶ人や新しい言語を習得する人にとって何か力になれればいいなと思っています．  \r\r# 前提\r前提として，まずこの半年ずっとGolangを書いていたわけではありません．量だけで言えばTypeScriptやPythonの方が多かったように感じます．  \rTypeScrip...","created_at":"2021-01-14"},{"id":"52","title":"preactとfastifyでSSR","description":"# こんにちは\rどうも，ぼくです．  \r久しぶりにブログ書いてる，日本語死んでそう．  \r今回はSSRについての記事です．頑張るぞ〜\r\r\r# 前提\rここしっかり書いとかないと解釈違いとかで怒られそうなので書いておきます．\r\r- この記事はSSRを理解するためのもの\r- First Viewは初期表示のことをいう，細かい分類はしない，レンダリングした結果がブラウザに表示されたタイミングのこと\r- preactとfastifyを使用している\r- コードは[これ](https://github.com/takurinton/preact-fastify-ssr)\r- 超簡単な構成\r- create ...","created_at":"2021-01-27"},{"id":"55","title":"仕事を始めて感じたこと","description":"# こんにちは\rバレンタインなのにチョコレートもらえない非リアのみなさん．どうも，僕です．  \r最近働き始めたので朝が辛いです．  \r今回は最近働き出して感じたことを書いていきたいと思います．  \r\r# 前提\rまずちょっと前提について話します．僕は労働は初めてではなく，一応サイバーエージェントさんでの就業型のインターンに参加して実務的なコードを書いたことはあります．  \rその時のブログは[こちら](https://www.takurinton.com/post/18)    \rただ，あの時はそもそもな技術力が不足していたり，焦ってしまって周りが見えていなかったり，サーバサイドもそこまで書いたこ...","created_at":"2021-02-14"},{"id":"56","title":"マルコフ連鎖実装してみた","description":"# こんにちは\rどうも，僕です．  \r今回はみんな大好きマルコフ連鎖についてです．  \rコードは[これ](https://github.com/takurinton/ts_markov)．  \r与えられた文章をもとにして新しい文章を生成するやつを実装しました．ではやっていきます．  \r\r\r# マルコフ連鎖って何？\rマルコフ連鎖とはどうやら離散マルコフ過程の別称のようです．知らんかった．Twitterで見かけてググってみたら出てきてほへーってなりました．  \r今回は文章を自動生成するためのマルコフ連鎖を実装していきます．また，何段階にもなるマルコフ連鎖があるようですが（全く知らん）今回は何も手を...","created_at":"2021-02-15"},{"id":"57","title":"Nuxt入門した","description":"# はじめに\rどうも，僕です．  \rNuxtに入門しました．よくわからないバグで昨日1日溶かしましたがまああれも経験ということで（元々使おうとしてたライブラリが某アダルトサイトの非公式ライブラリだったのでどこかがおかしかったのかも）  \rということで元々作ろうとしてたものに比べてだいぶ簡単な構成になってしまいましたがNuxtデビューブログを書いていきます．    \rあと今回内容薄いので許してください．あくまでも入門です．\r\r# 構成\r全体の構成はこんな感じです．ツリー書くのめんどくさいのでスクショで許してください．  \rリポジトリは[こちら](https://github.com/takuri...","created_at":"2021-02-27"},{"id":"58","title":"GraphQL入門","description":"# はじめに\r\rこんにちは、僕です。  \r  \rこの記事は [技術メモ](https://dev.takurinton.com/tech/graphql) にまとめたものの総括みたいな感じです。  \r\rということでGraphQL に入門したのでまとめます。  \rここでは Query と Mutation については触れますが Subscription については触れません。（これで入門したとか言うな）  \r一応 Subscription については後日追記予定です。  \r手を動かした時間で言うと10時間もないのでそこまで深くやっているわけではありません。  \r一旦ここにまとめてから深めて行きた...","created_at":"2021-05-17"},{"id":"59","title":"バンドルツール作る","description":"# こんにちは\r\rどうも、僕です。  \r最近バンドルツールを作った（というか作ってる途中）なのでその様子を記事にします。  \r  \rまだ作ってる途中なのと、あまりきれいな構成ではないので多目に見てください。  \rではやっていきます。  \r\r# 技術選定\r\rプログラムを実行するためのものと、バンドラーを作成するための補助として使うもののそれぞれを別に悩むことなく以下のように選定しました。\r\r## deno\r\rプログラムの実行に関してですが、今回は [Deno](https://deno.land/) を選択してみました。  \r存在は知っていたけど触れてなかったやつです、これを機に触れてみよ〜って...","created_at":"2021-06-05"},{"id":"67","title":"iframe のスクロール","description":"# はじめに\r\rこんにちは、どうも僕です。  \rIntersection Observer API を使ってスクロール率を用いてコンテンツの表示を操作するためにコードを書いていたのですが、ちょっとこけたのでまとめます。  \r  \r# Intersection Observer API とは\r\r[Intersection Observer API](https://developer.mozilla.org/ja/docs/Web/API/Intersection_Observer_API) とは、ターゲットとなる要素が指定した監視対象の要素が指定した viewport の範囲に入ったときに変更...","created_at":"2021-07-17"},{"id":"68","title":"日報？を作った","description":"# こんにちはどうも、僕です。今回は Twitter API を使って自分のツイートを自動で拾ってきてそれをもとに140文字以内の任意の文章を生成してツイートする bot を作成したのでその様子を記事にします。  なお、[@takurinton](https://twitter.com/takurinton) ではないアカウント（知ってる人は知ってる）なのでそこはご了承ください。# 使用技術- JavaScript  - バンドルするのがめんどくさいので CommonJS べたべた書いてます  - 手打ちの `module.exports` 久しぶりに見た- twitter  - npm pa...","created_at":"2021-07-21"},{"id":"71","title":"dumb-init とは","description":"# はじめに\r\rこんにちは、どうも僕です。  \rDockerfile を読んだり書いたりしてる時に出てきた dumb-init を知らなくて気になったので調査しました。  \r\r\r# dumb-init とは\r\rdumb-init とは Linux コンテナ用の最小限の init システムで、PID が 1 になるように作られています。  \r最小限のコンテナとは、Docker などの小さめの環境のことを指していています。C で書かれていて、静的リンクしたバイナリとしてデプロイされます。  \rデフォルトのままだと 700KB ありますが、musl と静的リンクさせて自分でビルドをすると 20KB ...","created_at":"2021-08-18"},{"id":"72","title":"インフラのパフォチュー","description":"# はじめに\r\rどうも、僕です。  \r先日、ISUCON に出場して、学生枠で6位、5位と2000点差で惜しくも本戦出場を逃しました。（チームメンバーに助けられまくってたので僕はなにもしてませんが）  \r  \r普段はフロントエンドの実装をメインとしてやっているのですが、最近仕事で Docker や k8s 周りを触ることが多く、少しサーバサイドやインフラについて少し興味が出てきたときに出場した ISUCON だったので以前よりもだいぶサーバサイドやインフラに興味が湧いてきました。  \rこれまであまりここら辺に積極的に触れることがなかったのですが（というよりそこまで経験が多くないから触ったことが...","created_at":"2021-08-29"},{"id":"74","title":"Preact の change event","description":"# こんにちは\r\rどうも、僕です。  \r先日、Preact を使用して、簡単なアプリケーションのプロトコーディングをしていて、input タグのイベントハンドラを呼ぼうとしたらうまく動かくてハマりました。  \r  \r以下のように定義していたのですが、結論としては、`onChange` ではなくて `onInput` を使わなければならないようです。\r\r\r\rその差分を埋めるための [preact/compat](https://github.com/preactjs/preact-compat) というツールも用意されていますが、今回はそれを使っていなかったのでハマってしまいました。\r\r# どう...","created_at":"2021-09-19"},{"id":"75","title":"GraphQL の print と parse","description":"# こんにちは\r\rどうも、僕です。  \r最近、業務や趣味で GraphQL の AST や query を動的にいじるようなことをしていて、その中で print 関数や parse 関数を脳死で使っていたのですが、ふと中身がどうなっているのか気になったため、ちょっと調べてみました。  \rなお、今回は、AST の見方などは書きません。\r\r# print と parse とは\r\r## parse 関数\rprint 関数とは、GraphQL の query から AST を生成する関数で、以下のようになります。  \r\r\r\rこのように書くと、以下のように出力されます。\r\r\r\r## print 関数\r\r...","created_at":"2021-09-19"},{"id":"76","title":"社会人になったら〜♪","description":"# こんにちは\r\rどうも、僕です。  \r超ポエム記事です。  \r  \r就職まであと半年くらい、多分東京に住み始めるまであと5ヶ月くらいになってきました。  \r妙に就職についてリアルに考えるようになり、社会人になったら時間取れるかなとか、やりたいことできるかなといった不安があります。  \r最近では、社会人の方と一緒に働かせてもらえることが多くて、色々な学びがありますが、みなさん輝いている方が多いです。OSS を積極的にやられてる方、趣味に没頭してる方などさまざまですが、好きなことをやっている方はみんな輝いています。自分もそのようになりたいなと考えています。  \rそんな感じで、自分の就職してからや...","created_at":"2021-09-20"},{"id":"77","title":"GraphQL の parse エディタ","description":"# こんにちは\r\rどうも、僕です。  \rシルバーウィークなのでこれまで書きたくても時間がなくて書けなかった記事をどんどん投下しています。  \r今回は、最近作ってる GraphQL の DocumentNode を parse して作ったエディタから動的に query を生成する画面のプロトコーディングをしたのでそれを簡単にまとめます。\r\r# 概要\rこのツイートの感じです。https://twitter.com/takurinton/status/1439255940193140739    \r  \r左側に引数のエディタがあって、右側では動的にリアルタイムで query を生成しています。  \r...","created_at":"2021-09-20"},{"id":"78","title":"自サイトのアクセス可視化","description":"# こんにちは\r\rどうも、僕です。  \r1ヶ月ほど前からポートフォリオとブログのトラッキングを始めて、だいぶデータが溜まってきたのでどうしようかなと思っていました。  \rちょうど、昨日（9月23日）は祝日で、数日前に研究の中間発表も終わり（学部の研究発表なんてたかが知れてるだろという声はさておき）、たまには休日っぽいことでもするかと思っていたので、ポートフォリオとブログのログを可視化するというコードを書いてみました。  \r昨日は1日通してちょこちょこ予定があったので、それも相まってとても良い休日でした。  \rまだデプロイはしてませんが、サーバサイドは EC2 に環境を準備しました。あとは pu...","created_at":"2021-09-23"},{"id":"79","title":"自サイトのアクセス可視化2","description":"# こんにちは\r\rどうも、僕です。  \rこの記事は [自サイトのアクセス可視化](https://blog.takurinton.com/post/78) の続きです。  \r前回は AST をこねくり回して、form をいじる実装をしました。  \r今回はそのアクセスごとの詳細画面を作成し、そこにグラフをつけて見やすくするみたいなことをしてみました。  \rまだまだきれいではないのですが、これからきれいになります、きっと。\r\r# 概要\r\r前回、ちょっとだけ作っていた Detail.tsx を拡張します。  \r詳細ページでは、クエリパラメータから、domain と path を取得して、その情報を使...","created_at":"2021-09-25"},{"id":"81","title":"プレイドのインターン終了した","description":"# こんにちは\r\rどうも、僕です。  \r[会社のブログ](https://tech.plaid.co.jp/intern_takurinton/) にも書いたのですが、プレイドのインターンを終了しました。  \r理由としては、これから色々忙しくなるからであって、別にクビになったわけではないです。  \rここでは、なんというか、こんなこと感じたみたいなことを書きます。  \r会社のブログは事実ベース、こっちのブログは感情ベースです。\r\r# あのブログに関して\r\rあのブログ、実は1ヶ月前くらいから書いていて、めちゃくちゃ時間かけました。やたら長文ですし、特定の技術領域の人にしか刺さらない内容になってしま...","created_at":"2021-09-30"},{"id":"83","title":"addEventListener の第3引数","description":"# こんにちは\r\rどうも、僕です。  \raddEventListener の第3引数って知ってますか。僕は知りませんでした。いや、厳密に言うと、存在は知ってたけど理解してませんでした。  \r理解するために、DOMのイベントフローとともに見ていきたいと思います。  \r\r# イベントフローとは\r\rまずはイベントフローとは何かについて考えます。  \rイベントフローとは、DOM に対するイベントの委任（伝播）のことで、例えば以下のようなコードが動くのはイベントフローによるものです。  \rこれは、parent をクリックすると当然 `parent clicked` と表示されますが、child の方をク...","created_at":"2021-10-13"},{"id":"84","title":"React のメモ化","description":"# こんにちは\r\rどうも、僕です。  \rプレイドのインターンで人生で初めて業務でフロントエンドを書いてから3ヶ月半が経ちました。  \rプレイドでは Vue と Svelte を書いていて、最後の2週間くらいは React を書いていましたが、まだまだよくわからない点が多く、特に hooks 周りを自分はしっかり理解してませんでした。  \rプレイドでは Vue と Svelte を書いていて、最後の2週間くらいは React を書いていましたが、まだまだよくわからない点が多く、特に hooks 周りを自分はしっかり理解してませんでした。  \r誰かから、useState と useEffect だ...","created_at":"2021-10-13"},{"id":"87","title":"JPHACKS に出場した","description":"# こんにちは\r\rどうも、僕です。  \r人生初ハッカソン、出場しました。総合すると、毎日忙しかったものの、とても楽しくコードを書くことができたと思います。  \rまた、一緒に出てくれたメンバーや、今回のハッカソンに出場していた皆さん、また、開催してくれた方々には感謝しかありません、ありがとうございました。\r\r\r# 作品\r\r- [https://github.com/jphacks/F_2111](https://github.com/jphacks/F_2111)\r\r# チームメンバー\r\r\rチームメンバーは、僕を含めて4人いました。  \r人の金で焼肉を食うことしか考えていない [ましくん](ht...","created_at":"2021-10-30"},{"id":"88","title":"forwardRef を習得した","description":"# こんにちは\r\rどうも、僕です。  \r最近色々あって、Material UI のコードを読んでいるのですが、forwardRef がさまざまな箇所で出てきて理解できないと辛いので勉強しました。  \r\r\r\r# ref とは\r\rref とは、簡単に言うと、dom であれば element、それ以外の要素であればその class のインスタンスに対してアタッチするためのものです。class component だと、要素 + インスタンスにアクセスできるわけです。  \r逆に、function component だと ref をそのまま渡すことができません。そんな時に、この記事のタイトルでもある ...","created_at":"2021-11-01"},{"id":"90","title":"僕がサブスクを使わない理由","description":"# こんにちは\r\rどうも、僕です。  \r若干時代の流れに背くようなタイトルになっていますが、**半分くらいは釣り** です。  \r僕が使っているサブスクのサービスは以下になります。  \r\r- AWS\r- Spotify \r- Amazon prime\r- Notion（学生なのでタダみたいなもん）\r\r別に、使ってないわけではないですし、しっかり使ってる方なのではないかとか思っています。（ごめんなさい）  \rそんな感じで僕がサブスクをあまり積極的に利用しない理由について書いていきます。\r\r### 補足\r\r書き終わってから思ったのですが、思ったよりサブスクのようなサービスは多くなく、マネフォくらい...","created_at":"2021-11-04"},{"id":"92","title":"マリオのUX","description":"# こんにちは\r\rどうも、僕です。  \r最近、スーパーマリオブラザーズにハマっていて、昼夜問わずにゲームばかりしています。もともと、ゲームなんかするよりも小説読んだり、コード書いたりする方が楽しいだろみたいな思考回路をしていたので、こういうのは新鮮で没頭してしまいます。もう少しでラスボスを倒せるので非常に楽しみです。  \rなんかマリオをやっていて、ゲームのUXって大事だなって思ったので記事にします。  \r\r\r# UX\r\rUX、体験体験言われていますが、個人的には、最近のUXはユーザーに意識させないことをいうものだと思っています。  \rユーザーが「体験いいな〜」って思うのではなく、「体験悪いな〜...","created_at":"2021-11-08"},{"id":"93","title":"検索を作る","description":"# こんにちは\r\rどうも、僕です。  \r検索エンジンを自作しようとしてうまくは行きましたが、想定していた規模には耐えることができなかったという内容の記事です。  \r実際、パフォーマンスにこだわると厳しい点が多かったり、検索結果が帰ってこなかったりしてだいぶしんどい実装になってしまいました。  \rもっとうまくやる方法があったら教えてください。  \r\r\r# 今回の手法と想定する規模\r\r今回は、転置インデックスを作成して戦います。  \r転置インデックスについては、[Wikipedia](https://ja.wikipedia.org/wiki/%E8%BB%A2%E7%BD%AE%E3%82%A4...","created_at":"2021-11-15"},{"id":"94","title":"MySQL の FULLTEXT とは","description":"# こんにちは\r\rどうも、僕です。  \rMySQL（MariaDB）に搭載されてる最強な検索、FULLITEXT INDEX について書きます。  \r[前回のブログ](https://blog.takurinton.com/post/93) で、検索をアプリケーション側で実装する方法について書きましたが、今回はそれのデータベース側からのアプローチです。  \rこのレイヤーでデータを操作するのは賛否が分かれる部分だとは思いますが、簡単に実装してみたのでやっていきます。\r\r# そもそも何\r\rインデックスです。  \r全文検索をデータベースのレイヤーで実装できないか見ていたら出てきました。（参考：[ht...","created_at":"2021-11-16"},{"id":"103","title":"結合時のアルゴリズム","description":"# こんにちは\r\rどうも、僕です。  \rSQL アンチパターンを読んでいて、「外部結合をすると処理のコストが指数関数的に上がっていってしまいます」との記述があり、よくわからなかったので調べました。 \r\r\r# JOIN アルゴリズム\r\rそもそも、 SQL の JOIN には、以下の3種類のアルゴリズムが使用されることが多いです。  \rオラクルと、postges には全部使用されていますが、MySQL には nested loop join のみが使用されています。\r\r- nested loop join\r- sort/merge\r- hash\r\rこの中でも nested loop join のア...","created_at":"2021-12-18"},{"id":"105","title":"2021年振り返り","description":"# こんにちは\r\rどうも、僕です。  \r2021年もそろそろ終わります。2021年は色々なことがありましたが、簡単にまとめると、機会と出逢いに恵まれた1年だったと思っています。  \rさまざまな優秀なエンジニアの方々と仕事をさせていただいたり、コミュニティへ招待していただいたりをしていました。  \r自分自身の技術的な成長があったかどうかは微妙ですが、エンジニアとして少しずつ地に足がついてきた実感はあります。  \r来年も頑張って行けるように、ここに今年のことをまとめます。\r  \rちなみに、GitHub の草はこんな感じで、よくコードを書いた一年だったなと思います。  \r\r![github](../...","created_at":"2021-12-29"},{"id":"108","title":"Svelte と SPA","description":"# こんにちは\r\rどうも、僕です。  \r最近、Svelte が市民権を獲得してきているようで、フロントエンド開発において、選択肢に入ってくる機会が増えてきたと思います。  \rまた、Twitter などでも、React よりも Svelte！のような内容のものや、Svelte を勉強してみるといった内容のものが増えてきたように感じます。  \rそれ自体はいいことであり、Svelte が選択肢に入ってくることは面白いとは思うのですが、React と Svelte を同列に考えているツイートや文章を目にすることもあり、難しい感情になっています。  \r\rSvelte のユースケースは、他のフロントエンド...","created_at":"2022-01-14"},{"id":109,"title":"ブログをSSGにした","description":"# こんにちはどうも、僕です。  今回はブログを SSG にしてみたという話をします。  年始に SSR をするような構成にしたばかりですが、色々あって（後述）作り替えてみました。SSR にする記事は以下からどうぞ。- [ブログを作り直した](https://zenn.dev/takurinton/articles/fc2e7374069e3b)- [Rust で GraphQL server を書いてみた](https://zenn.dev/takurinton/articles/bab60687f17c2b)このブログのソースコードはこちら  [takurinton/ssg-blog](h...","created_at":"2022-08-14"},{"id":110,"title":"wmr の prerender 時に明示的な fetch の定義が不要になる","description":"# こんにちはどうも、僕です。先日、ブログを新しくしました。=> [ブログを SSG にした](/post/109)  wmr の prerender mode を使って SSG にしましたが、自分の実装したような wmr の prerender で `.md` ファイルを使ったブログを書くようなパターンだと、prerender 関数の中で fetch API をオーバーライドしてあげないとプロダクションビルドをする際に fetch API がない旨のエラーが吐かれてしまいます。これは Node.js v18 以上であれば問題ないと思いきや、ローカルのファイルを見に行くようなことは想定されてな...","created_at":"2022-09-26"},{"id":111,"title":"SHA-256 algorithm","description":"# こんにちはどうも、僕です。  今週猫がきます。猫の名前について、友人と雑談をしていて、> 名前なんて記号なんだから呼びやすくて聞こえが良ければなんでもいいよと言われたので、記号だなんてそんなのハッシュではないかと思ったと同時に、ハッシュという名前はとてもいいなと思いました。  ハッシュという名前にしっくりきたので名前はハッシュにしようと思ったものの、筆者はコンピュータサイエンスの学部を出ているのにも関わらずハッシュ化アルゴリズムを自前実装した経験がありません。  そのため、今回は [Secure Hash Standard (SHS)](https://nvlpubs.nist.gov/n...","created_at":"2022-10-10"},{"id":112,"title":"2022年振り返り","description":"# こんにちは今年は散々な年だったため書かなくて良いかなと思っていましたが、こういうのは後から見てみてこういうのもあったなーと振り返るものな気がするので一応書いておきます。去年の振り返りはこちらです。@og[https://blog.takurinton.dev/post/105]去年に倣って GitHub の草を載せるとこんな感じです、去年と比べるとあまりコードを書かなかった 1 年だったように感じます。![GitHub 2022](../contents/images/2022-github.png)# ざっくり時系列## 1 月卒論の提出期日を間違えてました。@twitter[https...","created_at":"2022-12-31"}]